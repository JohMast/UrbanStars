{
    "collab_server" : "",
    "contents" : "#' Create a Star object around a central point\n#'\n#' @details This function creates a Star object around a given \\code{UrbanCenter}.\n#' It consists of \\code{NBeams} times \\code{NSegments} equally sized polygons of length \\code{BeamLength/NSegments} and width \\code{BeamWidth},\n#' arranged in \\code{NBeams} equally spaced beams of length \\code{Beamlength}.\n#'  The returned Star is a SpatialPolygonsDataFrame and is unprojected in WGS84 (EPSG:4326).\n#'  It contains a field \"OverallId\" which contains unique ids for each segment, the first 6 numbers indicating the beam, the latter 6 numbers indicating the segment.\n#'\n#'\n#' @param UrbanCenter a SpatialPoint object\n#' @param BeamWidth width of each beam in meters\n#' @param BeamLength length of each beam in meters\n#' @param NSegments number of segments of each beam\n#' @param NBeams the number of beams of the star\n#'\n#' @return SpatialPolygonsDataframe\n#'\n#' @examples\n#' create_star_click(UrbanCenter)\n#'\n#' @seealso\n#' \\code{\\link{create_beam}},\n#'\\code{\\link{create_star_click}}\n#'\n#' @export\n#' @import raster\n#' @import sp\n#' @author Johannes Mast\n\n\ncreate_star <- function(UrbanCenter,BeamWidth=10000,BeamLength=70000,NSegments=10,NBeams=8){\n  #Calculate the offset angle between each beam\n  OffAngleInc <- 360 / NBeams\n\n  #In a loop, call create_beam NBeams times, each time\n  # the angle (starting at 0) is increased by OffAngleInc\n\n  for (i in 1:NBeams) {\n    Beam <- create_beam(\n      UrbanCenter = UrbanCenter,\n      BeamWidth = BeamWidth,\n      BeamLength = BeamLength,\n      NSegments = NSegments,\n      OffAngle = (i - 1) * OffAngleInc\n    )\n\n    #To identify the individual segments later, columns in the attribute table are created\n    Beam$BeamId <- i\n    Beam$SegmentId <- Beam$id\n    Beam$OverallId <- paste0(sprintf(\"%06d\",Beam$BeamId),\n                             sprintf(\"%06d\",Beam$SegmentId))\n\n    if (i == 1) { # if the first beam, leave as is\n      Star <- Beam\n    } else{   #if not the first beam, append a new beam to previous beams\n      Star <- rbind(Star,Beam)\n    } # end else\n  }\n  return(Star)\n\n}\n",
    "created" : 1548457503609.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "14705789",
    "id" : "4D2E7A6",
    "lastKnownWriteTime" : 1548457513,
    "last_content_update" : 1548457513601,
    "path" : "~/Studiendateien/R_Scripts/UrbanStars/R/create_star.R",
    "project_path" : "R/create_star.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}