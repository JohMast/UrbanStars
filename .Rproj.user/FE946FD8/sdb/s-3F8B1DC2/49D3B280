{
    "collab_server" : "",
    "contents" : "#' Split the dataframe of a Star object into its constituent beams\n#'\n#'@details  Splits the dataframe of a \\code{Star} into its constituent beams (identified by their \"BeamId\"). Each resulting beam dataframe is as long as the number of segments of the beam.\n#'\n#' @param Star a Star object that contains columns \"BeamId\" and \"SegmentId\", as created by create_star()\n#'\n#' @return List of dataframes\n#'\n#' @examples\n#' split_star_into_beams(Star)\n#' @seealso\n#' \\code{\\link{create_star}}\n#'\n#'\n#' @export\n#' @import sp\n#' @author Johannes Mast\n\nsplit_star_into_beams <- function(Star) {\n  StarDataByBeams <- split(Star@data,\n                           f = rep(1:length(unique(Star$BeamId)), #Split into the number of beams\n                                   each = length(unique(Star$SegmentId)))) # Each beam as long as the number of segments\n  return(StarDataByBeams)\n}\n",
    "created" : 1548457464306.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2163930024",
    "id" : "49D3B280",
    "lastKnownWriteTime" : 1548457110,
    "last_content_update" : 1548457110,
    "path" : "~/Studiendateien/R_Scripts/UrbanStars/R/split_star_into_beams.R",
    "project_path" : "R/split_star_into_beams.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}